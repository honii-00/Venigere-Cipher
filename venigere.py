import itertools

def characters():
    text = "QAVHYFOVEDFMPBQKXNOCRGJJTZDZFDFMLNEBWFAEEXKELABKVZKTCGPOKZGZORFSEEXNBWXLKBBBRGRZMEVGSBKZIPOMYNECEFJDYXJVOBMYRFKBMRCPBKLTPPFYLPMFDLIHETHEBTUWFOVGSBPFYLPMFDTVBBJZITJGZNKVALJXUFEGHYACFOVEMVXREWVVFYZKBRYLRMYBCFMZRDTTJNGFMRYAXKKBQIBWRQLKKUPTHCNDQHHVJFDGEZSBUVYDYFBOXGUZPABTVYBTEQNLGERNQBETEEXNBWXLKBBBRMVWITXRDXEFARPBURTQMYRWXGUSPAUPGSBKZIPOPRFFPXUSZOALAEFGXULOOVFEFGXZPABTVYBLRAOLUKNTKBETMRBCQTKZDNEBKZNWPWRVWVEZSPXGUPFIMLEPTXIRCFVYNYAORETBWTRCBFFATBLNRCBIVEQLKDROXGUXYLPCRODXNNDMTJFPAWFJYQAIBFDAXRYBKRGTLGJGSBNEVGBKJVEVHWAPTUIHYPPZPVFLKUPCBIFEBGXYTPACNYDNRTPRGZIPOLZGJFGTNYXWROFQMYRQFKJGWXGXHLDXJCZHXEBYQAZFWXGUVDTHCNDQHHRJITKHHBPRXZKMYRQFKJGEBTTUTKZJBYQAVYLKWNRCBMYREBTTUTKZJBQQAVJZITJGZNBPVVX"
    alphabet = list("ABCDEFGHIJKLMNOPQRSTUVWXYZ")
    char = list(text)
    alphabet_num = [alphabet.index(i) for i in char]
    return char, alphabet, alphabet_num


# def freq():
#     text = "QAVHYFOVEDFMPBQKXNOCRGJJTZDZFDFMLNEBWFAEEXKELABKVZKTCGPOKZGZORFSEEXNBWXLKBBBRGRZMEVGSBKZIPOMYNECEFJDYXJVOBMYRFKBMRCPBKLTPPFYLPMFDLIHETHEBTUWFOVGSBPFYLPMFDTVBBJZITJGZNKVALJXUFEGHYACFOVEMVXREWVVFYZKBRYLRMYBCFMZRDTTJNGFMRYAXKKBQIBWRQLKKUPTHCNDQHHVJFDGEZSBUVYDYFBOXGUZPABTVYBTEQNLGERNQBETEEXNBWXLKBBBRMVWITXRDXEFARPBURTQMYRWXGUSPAUPGSBKZIPOPRFFPXUSZOALAEFGXULOOVFEFGXZPABTVYBLRAOLUKNTKBETMRBCQTKZDNEBKZNWPWRVWVEZSPXGUPFIMLEPTXIRCFVYNYAORETBWTRCBFFATBLNRCBIVEQLKDROXGUXYLPCRODXNNDMTJFPAWFJYQAIBFDAXRYBKRGTLGJGSBNEVGBKJVEVHWAPTUIHYPPZPVFLKUPCBIFEBGXYTPACNYDNRTPRGZIPOLZGJFGTNYXWROFQMYRQFKJGWXGXHLDXJCZHXEBYQAZFWXGUVDTHCNDQHHRJITKHHBPRXZKMYRQFKJGEBTTUTKZJBYQAVYLKWNRCBMYREBTTUTKZJBQQAVJZITJGZNBPVVX"
#     #xtrnl
#     char_freq = [(char.count(i)/len(char)) for i in alphabet]
#     k = [text[i::5] for i in range(5)]
#     letter = [alphabet.index(i) for i in k[1]]
#     l = {}
#     for i in letter:
#         l[i] = l.get(i, 0) + 1
#     return k, l


def cipher():
    # Ek(y) = (y1 − k1 mod 26, y2 − k2 mod 26, · · · , ym − km mod 26).
    key = ["X", "T", "R", "N", "L"]
    key_num = [alphabet.index(i) for i in key]
    decipher = []
    for i1, i2 in zip(alphabet_num, itertools.cycle(key_num)):
        decipher.append((i1 - i2) % 26)
    deciphered = [alphabet[i] for i in decipher]
    return deciphered


if __name__ == '__main__':
    char, alphabet, alphabet_num = characters()
    f = freq()
    c = cipher()
    print(c)
